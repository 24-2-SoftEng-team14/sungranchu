import React, { useRef } from 'react';
import './Search.css';
import arrowIcon from './arrow.png';
import Footer from '../../component/footer/Footer';

// Dynamically require all images from the "restaurant" directory
const images = require.context('./', false, /restaurant[1-9]|1[0-9]|20|21\.png$/);

export default function Search() {
    const searchCategories = [
        {
            "title": "# ÌïúÏãù",
            "items": [
                { "name": "ÌûàÎã≠Î∞ú", "img": images('./restaurant1.png') },
                { "name": "ÎèôÎÑ§ÎπàÎåÄÎñ°", "img": images('./restaurant2.png') },
                { "name": "Îã¥ÏùÄÏÉ§Î∏åÏπºÍµ≠Ïàò", "img": images('./restaurant3.png') },
            ]
        },
        {
            "title": "# ÏùºÏãù",
            "items": [
                { "name": "ÌïòÎ£®ÏóîÏÜåÏø†", "img": images('./restaurant4.png') },
                { "name": "ÏµúÍ≥†ÎãπÎèàÍ∞ÄÏä§", "img": images('./restaurant5.png') },
                { "name": "ÌÇ§ÏôÄÎßàÎ£®ÏïÑÏßÄ", "img": images('./restaurant6.png') },
            ]
        },
        {
            "title": "# Ï§ëÏãù",
            "items": [
                { "name": "ÌÉïÌôîÏøµÌë∏ÎßàÎùºÌÉï", "img": images('./restaurant7.png') },
                { "name": "ÏàòÌï¥Î≥µÎßàÎùºÌÉï", "img": images('./restaurant8.png') },
                { "name": "ÏÉπÏ∏†ÎßàÎùº", "img": images('./restaurant9.png') },
            ]
        },
        {
            "title": "# ÏñëÏãù",
            "items": [
                { "name": "Ïò§Ïä§ÌÖåÎ¶¨ÏïÑ Ïö∞ÎÖ∏", "img": images('./restaurant10.png') },
                { "name": "59ÏåÄÌîºÏûê", "img": images('./restaurant11.png') },
                { "name": "Î°§ÎßÅÌååÏä§ÌÉÄ", "img": images('./restaurant12.png') },
            ]
        },
        {
            "title": "# Í≥†Í∏∞",
            "items": [
                { "name": "Î≥¥Î¶¨ÎÑ§ Ï£ºÎ®πÍ≥†Í∏∞", "img": images('./restaurant13.png') },
                { "name": "Ïú°Ïãù", "img": images('./restaurant14.png') },
                { "name": "ÏÑ±ÎåÄÍ≥±Ï∞Ω", "img": images('./restaurant15.png') },
            ]
        },
        {
            "title": "# ÌñÑÎ≤ÑÍ±∞",
            "items": [
                { "name": "Îß•ÎèÑÎÇ†Îìú ÏàòÏõêÏÑ±Í∑†Í¥ÄÎåÄÏ†ê", "img": images('./restaurant16.png') },
                { "name": "Î°ØÎç∞Î¶¨ÏïÑ ÏàòÏõêÏÑ±ÎåÄÏ†ê", "img": images('./restaurant17.png') },
                { "name": "ÏÇ¨Ïö∞Ïä§Ïä§Ìä∏Î¶ø", "img": images('./restaurant18.png') },
            ]
        },
        {
            "title": "# Î≤†Ïù¥Ïª§Î¶¨",
            "items": [
                { "name": "ÌîåÎ†ÅÎìú", "img": images('./restaurant19.png') },
                { "name": "ÌååÎ¶¨Î∞îÍ≤åÎú® ÏÑ±Í∑†Í¥ÄÎåÄÏ†ê", "img": images('./restaurant20.png') },
                { "name": "Ïä§ÌÉÄÎ≤ÖÏä§", "img": images('./restaurant21.png') },
            ]
        }
    ];

    const categoryRef = useRef(null);

    const scroll = (direction) => {
        if (categoryRef.current) {
            const { scrollLeft, clientWidth } = categoryRef.current;
            const scrollTo = direction === 'left' ? scrollLeft - clientWidth : scrollLeft + clientWidth;
            categoryRef.current.scrollTo({ left: scrollTo, behavior: 'smooth' });
        }
    };

    return (
        <div className="search-container">
            <header className="search-header">
                <h2 className="search-title">Í≤ÄÏÉâ ÌéòÏù¥ÏßÄ</h2>
            </header>

            <div className="search-bar">
                <input
                    type="text"
                    placeholder="Î†àÏä§ÌÜ†Îûë Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî."
                    className="search-input"
                />
                <button className="search-icon">üîç</button>
            </div>

            <div className="search-results">
                {searchCategories.map((category, index) => (
                    <div key={index} className="search-category">
                        <h3 className="category-title">{category.title}</h3>
                        <div className="category-items-container">
                            <div className="category-items" ref={categoryRef}>
                                {category.items.map((item, idx) => (
                                    <div key={idx} className="category-item">
                                        <img src={item.img} alt={item.name} />
                                        <p>{item.name}</p>
                                    </div>
                                ))}
                            </div>
                            <button
                                className="scroll-arrow right"
                                onClick={() => scroll('right')}
                            >
                                <img src={arrowIcon} alt="Scroll Right" />
                            </button>
                        </div>
                    </div>
                ))}
            </div>

            <Footer />
        </div>
    );
}
